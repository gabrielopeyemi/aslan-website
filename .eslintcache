[{"/home/oem/Documents/Project/aslan-web/src/App.tsx":"1","/home/oem/Documents/Project/aslan-web/src/index.tsx":"2","/home/oem/Documents/Project/aslan-web/src/Components/Routes.tsx":"3","/home/oem/Documents/Project/aslan-web/src/Components/Pages/Dashboard.tsx":"4","/home/oem/Documents/Project/aslan-web/src/Components/Pages/Login.tsx":"5","/home/oem/Documents/Project/aslan-web/src/Components/Pages/SignUp.tsx":"6","/home/oem/Documents/Project/aslan-web/src/Components/Pages/ForgetPassword.tsx":"7","/home/oem/Documents/Project/aslan-web/src/Components/Layer/Copyright.tsx":"8","/home/oem/Documents/Project/aslan-web/src/Components/Layer/Orders.tsx":"9","/home/oem/Documents/Project/aslan-web/src/Components/Layer/Deposits.tsx":"10","/home/oem/Documents/Project/aslan-web/src/Components/Layer/Title.tsx":"11","/home/oem/Documents/Project/aslan-web/src/Components/Layer/listItems.tsx":"12","/home/oem/Documents/Project/aslan-web/src/Components/Layer/Chart.tsx":"13","/home/oem/Documents/Project/aslan-web/src/Components/Pages/Tracking.tsx":"14"},{"size":206,"mtime":1608906955278,"results":"15","hashOfConfig":"16"},{"size":500,"mtime":1608905659646,"results":"17","hashOfConfig":"16"},{"size":1028,"mtime":1608926365846,"results":"18","hashOfConfig":"16"},{"size":6131,"mtime":1608924545020,"results":"19","hashOfConfig":"16"},{"size":3053,"mtime":1608922629536,"results":"20","hashOfConfig":"16"},{"size":3883,"mtime":1608922637364,"results":"21","hashOfConfig":"16"},{"size":2475,"mtime":1608922592800,"results":"22","hashOfConfig":"16"},{"size":481,"mtime":1608918097221,"results":"23","hashOfConfig":"16"},{"size":2539,"mtime":1608926115594,"results":"24","hashOfConfig":"16"},{"size":879,"mtime":1608917804865,"results":"25","hashOfConfig":"16"},{"size":374,"mtime":1608917868885,"results":"26","hashOfConfig":"16"},{"size":2259,"mtime":1608929577887,"results":"27","hashOfConfig":"16"},{"size":1463,"mtime":1608912218662,"results":"28","hashOfConfig":"16"},{"size":6124,"mtime":1608926298632,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1txctf3",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/oem/Documents/Project/aslan-web/src/App.tsx",[],["66","67"],"/home/oem/Documents/Project/aslan-web/src/index.tsx",[],["68","69"],"/home/oem/Documents/Project/aslan-web/src/Components/Routes.tsx",["70"],"/home/oem/Documents/Project/aslan-web/src/Components/Pages/Dashboard.tsx",["71"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './../Layer/listItems';\nimport Chart from './../Layer/Chart';\nimport Deposits from './../Layer/Deposits';\nimport Orders from '../Layer/Orders';\nimport Copyright from '../Layer/Copyright';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  absolute: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(3),\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Dashboard\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart />\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits />\n              </Paper>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Tooltip title=\"Add\" aria-label=\"add\">\n            <Fab color=\"secondary\" className={classes.absolute} onClick={()=> console.log('get form')}>\n                <AddIcon />\n            </Fab>\n        </Tooltip>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n",["72","73"],"/home/oem/Documents/Project/aslan-web/src/Components/Pages/Login.tsx",["74","75"],"import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport {Link as ALink} from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Copyright from '../Layer/Copyright';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const handleSubmit = ():void =>{\n      console.log('Login')\n      window.location.href = '/dashboard';\n  } \n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Login\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <div\n            className='btn btn-block btn-main'\n            onClick={handleSubmit}\n          >\n            Sign In\n          </div>\n          <br/>\n          <Grid container>\n            <Grid item xs>\n              <ALink to=\"/forgetpassword\">\n                Forgot password?\n              </ALink>\n            </Grid>\n            <Grid item>\n              <ALink to=\"/register\" >\n                {\"Don't have an account? Sign Up\"}\n              </ALink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","/home/oem/Documents/Project/aslan-web/src/Components/Pages/SignUp.tsx",["76","77"],"/home/oem/Documents/Project/aslan-web/src/Components/Pages/ForgetPassword.tsx",["78","79","80"],"import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {Link as ALink} from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Copyright from './../Layer/Copyright'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const handleSubmit = ():any =>{\n      console.log('forget password')\n      window.location.href = '/dashboard';\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n        ForgetPassword\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <div\n            className='btn btn-block btn-main'\n            onClick={handleSubmit}\n          >\n            Sign In\n          </div>\n          <br/>\n          <Grid container>\n            <Grid item xs>\n              <ALink to=\"/\" >\n                I remember my password\n              </ALink>\n            </Grid>\n            <Grid item>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","/home/oem/Documents/Project/aslan-web/src/Components/Layer/Copyright.tsx",[],["81","82"],"/home/oem/Documents/Project/aslan-web/src/Components/Layer/Orders.tsx",[],"/home/oem/Documents/Project/aslan-web/src/Components/Layer/Deposits.tsx",[],"/home/oem/Documents/Project/aslan-web/src/Components/Layer/Title.tsx",[],"/home/oem/Documents/Project/aslan-web/src/Components/Layer/listItems.tsx",["83","84","85"],"import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { Link } from 'react-router-dom';\n\nexport const mainListItems: any = (\n  <div>\n    <Link to='/'>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n      </ListItem>\n    </Link>\n    <Link to='/tracking'>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Tracking\" />\n      </ListItem>\n    </Link>\n    {/* <ListItem button>\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Orders\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>     \n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Customers\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Reports\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Integrations\" />\n    </ListItem> */}\n    \n  </div>\n);\n\nexport const secondaryListItems: any = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end sale\" />\n    </ListItem>\n  </div>\n);","/home/oem/Documents/Project/aslan-web/src/Components/Layer/Chart.tsx",[],"/home/oem/Documents/Project/aslan-web/src/Components/Pages/Tracking.tsx",["86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":6,"column":3,"nodeType":"95","messageId":"96","endLine":6,"endColumn":7},{"ruleId":"93","severity":1,"message":"94","line":17,"column":8,"nodeType":"95","messageId":"96","endLine":17,"endColumn":12},{"ruleId":"87","replacedBy":"97"},{"ruleId":"89","replacedBy":"98"},{"ruleId":"93","severity":1,"message":"99","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},{"ruleId":"93","severity":1,"message":"94","line":8,"column":8,"nodeType":"95","messageId":"96","endLine":8,"endColumn":12},{"ruleId":"93","severity":1,"message":"99","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},{"ruleId":"93","severity":1,"message":"94","line":8,"column":8,"nodeType":"95","messageId":"96","endLine":8,"endColumn":12},{"ruleId":"93","severity":1,"message":"99","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},{"ruleId":"93","severity":1,"message":"100","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":24},{"ruleId":"93","severity":1,"message":"101","line":7,"column":8,"nodeType":"95","messageId":"96","endLine":7,"endColumn":16},{"ruleId":"87","replacedBy":"102"},{"ruleId":"89","replacedBy":"103"},{"ruleId":"93","severity":1,"message":"104","line":7,"column":8,"nodeType":"95","messageId":"96","endLine":7,"endColumn":24},{"ruleId":"93","severity":1,"message":"105","line":8,"column":8,"nodeType":"95","messageId":"96","endLine":8,"endColumn":18},{"ruleId":"93","severity":1,"message":"106","line":10,"column":8,"nodeType":"95","messageId":"96","endLine":10,"endColumn":18},{"ruleId":"93","severity":1,"message":"94","line":17,"column":8,"nodeType":"95","messageId":"96","endLine":17,"endColumn":12},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],["107"],["108"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["107"],["108"],"'Button' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.",["107"],["108"],"'ShoppingCartIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'LayersIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]